@model EditFriendViewModel
@{
}
<div class="container px-4 py-4" id="add-edit-friend">
    <h2 class="pb-2 border-bottom">Edit a friend's details</h2>
    <p>Fill in the details below to edit a friend. Once you have edited your friend you can edit the details of your fiend such as favorite quotes and pets.</p>

    @if (Model.ErrorMessage != null)
    {
        <div class="row mb-1 text-center">
            <span class="alert alert-danger" role="alert">
                @Model.ErrorMessage
            </span>
        </div>
    }
    else
    {
        @if (Model.HasValidationErrors)
        {
            <div class="row g-3">
                @foreach (var item in Model.ValidationErrorMsgs)
                {
                    <span class="alert alert-danger" role="alert">
                        @item
                    </span>
                }
            </div>
        }
        <div class="row row-cols-1 row-cols-lg-4 align-items-stretch g-4 py-5">
            <div class="col-md-7 col-lg-8">
                <form class="needs-validation" method="post" novalidate>
                    <input asp-for="FriendToEdit.FriendId" type="hidden"/>
                    <input asp-for="AddressToEdit.AddressId" type="hidden"/>
                    @if(Model.FriendToEdit.PetsId != null)
                    {
                        @foreach (var petId in Model.FriendToEdit.PetsId) { <input type="hidden" name="petsId" value="@petId" /> }
                    }
                    @if(Model.FriendToEdit.QuotesId != null)
                    {
                        @foreach (var quoteId in Model.FriendToEdit.QuotesId) { <input type="hidden" name="quotesId" value="@quoteId" /> }
                    }

                    <div class="row g-3">
                        <div class="col-sm-6">
                            <label for="firstName" class="form-label">First name</label>
                            <input type="text" class="form-control" asp-for="FriendToEdit.FirstName" id="firstName" placeholder="" value="@Model.FriendToEdit.FirstName" required>
                        </div>

                        <div class="col-sm-6">
                            <label for="lastName" class="form-label">Last name</label>
                            <input type="text" class="form-control" asp-for="FriendToEdit.LastName" id="lastName" placeholder="" value="@Model.FriendToEdit.LastName" required>
                        </div>
                    
                        <div class="col-sm-6">
                            <label for="birthday" class="form-label">Birthday <span class="text-body-secondary">(Optional)</span></label>
                            <input type="date" class="form-control" asp-for="FriendToEdit.Birthday" id="birthday" placeholder="" value="@(Model.FriendToEdit.Birthday.HasValue ? Model.FriendToEdit.Birthday.Value.ToString("yyyy-MM-dd") : "")">
                        </div>

                        <div class="col-sm-6"></div>

                        <div class="col-sm-6">
                            <label class="form-check-label" for="userHasAddress">I know the address</label>
                            <input class="form-check-input" type="checkbox" asp-for="UserHasAddress" id="userHasAddress" onchange="toggleAddressFields()">
                        </div>

                        <div class="row g-3" id="addressFields" style="display: @(string.IsNullOrEmpty(Model.AddressToEdit.StreetAddress) ? "none" : "flex")">
                            <div class="col-12">
                                <label for="address" class="form-label">Address</label>
                                <input type="text" class="form-control" asp-for="AddressToEdit.StreetAddress" id="address" value="@Model.AddressToEdit.StreetAddress">
                            </div>

                            <div class="col-md-3">
                                <label for="zip" class="form-label">Zip</label>
                                <input type="text" class="form-control" asp-for="AddressToEdit.ZipCode" id="zip" placeholder="" value="@Model.AddressToEdit.ZipCode">
                            </div>

                            <div class="col-md-4">
                                <label for="city" class="form-label">City</label>
                                <input type="text" class="form-control" asp-for="AddressToEdit.City" id="city" value="@Model.AddressToEdit.City">
                            </div>

                            <div class="col-md-5">
                                <label for="country" class="form-label">Country</label>
                                <input type="text" class="form-control" asp-for="AddressToEdit.Country" id="country" value="@Model.AddressToEdit.Country">
                            </div>
                        </div>

                        <script>
                            function toggleAddressFields() {
                                var checkBox = document.getElementById("userHasAddress");
                                var addressFields = document.getElementById("addressFields");
                                if (checkBox.checked) {
                                    addressFields.style.display = "flex";
                                } else {
                                    addressFields.style.display = "none";
                                }
                            }
                        </script>
                    </div>
                    <button class="w-100 btn btn-primary btn-lg my-4" type="submit" asp-route-petsId="@Model.FriendToEdit.PetsId" asp-route-quotesId="@Model.FriendToEdit.QuotesId" asp-page-handler="Save" >Save</button>
                </form>
            </div>
        </div>
    }
</div>