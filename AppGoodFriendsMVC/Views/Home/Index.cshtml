@{
    ViewData["Title"] = "Home";
}
<!-- Individual pages, I place them with <main> tag. Will become separate Razor Pages -->
<!-- Page Welcome -->
<div class="container px-4 py-4" id="home">
    <div class="bg-body-tertiary p-5 rounded">
        <div class="col-sm-8 py-5 mx-auto">
            <h1 class="display-5 fw-normal">Welcome to Razor pages and MVC studies</h1>
            <p class="fs-5">
                This is the Studies part of the ASP.NET Web Development course, and shows how to combine ASP.NET Razorpages and MVC.
                Pages are rendered in ASP.NET backend using C# and Razor syntax. Frontend is using css, javascript, Bootstrap and JQuery.
                Backend architecture is MVC and MVVM.
            </p>
            <p>
                We use loosely coupled software layers so we use commuunicate with a SQL Database either through EntityFramework Core integrated in the application or via a WebApi.
                All without any code changes in the Application except in the Dependency Injection where we simply inject different services.
            </p>

            <p>And byte way, I also use favicon. Enjoy!</p>
            <p>
                <a class="btn btn-primary" href="https://appmusicwebapi.azurewebsites.net/swagger/index.html" role="button">Do you remember the WebApi?</a>
            </p>

            <a href="~/Home/Privacy" role="button">Privacy policy</a>
        </div>
    </div>
</div>
