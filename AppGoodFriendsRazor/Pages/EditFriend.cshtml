@page
@model MyApp.Namespace.EditFriendModel
@{
}
<div class="container px-4 py-4" id="add-edit-friend">
    <h2 class="pb-2 border-bottom">Edit a friend's details</h2>
    <p>Fill in the details below to edit a friend. Once you have edited your friend you can edit the details of your fiend such as favorite quotes and pets.</p>

    <div class="row row-cols-1 row-cols-lg-4 align-items-stretch g-4 py-5">
        <div class="col-md-7 col-lg-8">
            <form class="needs-validation" method="post" novalidate>
                <input asp-for="FriendToEdit.FriendId" type="hidden"/>
                <input asp-for="AddressToEdit.AddressId" type="hidden"/>

                <div class="row g-3">
                    <div class="col-sm-6">
                        <label for="firstName" class="form-label">First name</label>
                        <input type="text" class="form-control @(string.IsNullOrEmpty(Model.FriendToEdit.FirstName) ? "is-invalid" : "is-valid")" asp-for="FriendToEdit.FirstName" id="firstName" placeholder="" value="@Model.FriendToEdit.FirstName" required>
                        @if (string.IsNullOrEmpty(Model.FriendToEdit.FirstName))
                        {
                            <div class="invalid-feedback">
                                Valid first name is required
                            </div>
                        }
                    </div>

                    <div class="col-sm-6">
                        <label for="lastName" class="form-label">Last name</label>
                        <input type="text" class="form-control @(string.IsNullOrEmpty(Model.FriendToEdit.LastName) ? "is-invalid" : "is-valid")" asp-for="FriendToEdit.LastName" id="lastName" placeholder="" value="@Model.FriendToEdit.LastName" required>
                        @if (string.IsNullOrEmpty(Model.FriendToEdit.LastName))
                        {
                            <div class="invalid-feedback">
                                Valid last name is required
                            </div>
                        }
                    </div>
                
                    <div class="col-sm-6">
                        <label for="birthday" class="form-label">Birthday <span class="text-body-secondary">(Optional)</span></label>
                        <input type="date" class="form-control" asp-for="FriendToEdit.Birthday" id="birthday" placeholder="" value="@(Model.FriendToEdit.Birthday.HasValue ? Model.FriendToEdit.Birthday.Value.ToString("yyyy-MM-dd") : "")">
                        <div class="invalid-feedback">
                            Please enter a valid birthday
                        </div>
                    </div>

                    <div class="col-sm-6"></div>

                    <div class="col-sm-6">
                        <label class="form-check-label" for="userHasAddress">I know the address</label>
                        <input class="form-check-input" type="checkbox" asp-for="UserHasAddress" id="userHasAddress" onchange="toggleAddressFields()">
                    </div>

                    <div class="row g-3" id="addressFields" style="display: @(string.IsNullOrEmpty(Model.AddressToEdit.StreetAddress) ? "none" : "flex")">
                        <div class="col-12">
                            <label for="address" class="form-label">Address</label>
                            <input type="text" class="form-control @(string.IsNullOrEmpty(Model.AddressToEdit.StreetAddress) ? "is-invalid" : "is-valid")" asp-for="AddressToEdit.StreetAddress" id="address" value="@Model.AddressToEdit.StreetAddress" required>
                            @if (string.IsNullOrEmpty(Model.AddressToEdit.StreetAddress))
                            {
                                <div class="invalid-feedback">
                                    Please enter a street address
                                </div>
                            }
                        </div>

                        <div class="col-md-3">
                            <label for="zip" class="form-label">Zip</label>
                            <input type="text" class="form-control @(string.IsNullOrEmpty(Model.AddressToEdit.ZipCode.ToString()) ? "is-invalid" : "is-valid")" asp-for="AddressToEdit.ZipCode" id="zip" placeholder="" value="@Model.AddressToEdit.ZipCode" required>
                            @if (string.IsNullOrEmpty(Model.AddressToEdit.ZipCode.ToString()))
                            {
                                <div class="invalid-feedback">
                                    Please enter a zip code
                                </div>
                            }
                        </div>

                        <div class="col-md-4">
                            <label for="city" class="form-label">City</label>
                            <input type="text" class="form-control @(string.IsNullOrEmpty(Model.AddressToEdit.City) ? "is-invalid" : "is-valid")" asp-for="AddressToEdit.City" id="city" value="@Model.AddressToEdit.City" required>
                            @if (string.IsNullOrEmpty(Model.AddressToEdit.City))
                            {
                                <div class="invalid-feedback">
                                    Please enter a city
                                </div>
                            }
                        </div>

                        <div class="col-md-5">
                            <label for="country" class="form-label">Country</label>
                            <input type="text" class="form-control @(string.IsNullOrEmpty(Model.AddressToEdit.Country) ? "is-invalid" : "is-valid")" asp-for="AddressToEdit.Country" id="country" value="@Model.AddressToEdit.Country" required>
                            @if (string.IsNullOrEmpty(Model.AddressToEdit.Country))
                            {
                                <div class="invalid-feedback">
                                    Please enter a country
                                </div>
                            }
                        </div>
                    </div>

                    <script>
                        function toggleAddressFields() {
                            var checkBox = document.getElementById("userHasAddress");
                            var addressFields = document.getElementById("addressFields");
                            if (checkBox.checked) {
                                addressFields.style.display = "flex";
                            } else {
                                addressFields.style.display = "none";
                            }
                        }
                    </script>
                </div>
                <button class="w-100 btn btn-primary btn-lg my-4" type="submit" asp-page-handler="Save" >Save</button>
            </form>
        </div>
    </div>
</div>